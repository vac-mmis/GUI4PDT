# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
image : node:lts-alpine

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-frontend:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - cd frontend
    - npm i
    - echo "Building frontend..."
    - npm run build
    - echo "Frontend build complete."

build-backend:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - cd backend
    - npm i
    - echo "Building backend..."
    - npm run build
    - echo "Backend build complete."

lint-frontend:   # This job also runs in the test stage.
  needs:
    - build-frontend
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - cd frontend
    - npm run lint
    - echo "No lint issues found."

lint-backend:   # This job also runs in the test stage.
  needs:
    - build-backend
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - cd backend
    - npm run lint
    - echo "No lint issues found."

deploy-build:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  needs:
    - lint-frontend
    - lint-backend
  environment: production
  script:
    - echo "Build Docker application..."
    - docker compose build
    - echo "Docker build complete."

deploy:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  needs:
    - deploy-build
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Add deployment here"
    - echo "Application successfully deployed."
